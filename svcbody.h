
#ifndef SZAPPNAME
//
// SZAPPNAME					name of the executable
// SZSERVICENAME				internal name of the service
// SZSERVICEDISPLAYNAME			displayed name of the service
// SZDEPENDENCIES				list of service dependencies - "dep1\0dep2\0\0"
//
#define SZAPPNAME            	"stone"
#define SZSERVICENAME        	"Stone"
#define SZSERVICEDISPLAYNAME 	"Stone Service"
#define SZDEPENDENCIES			"TcpIp\0\0"
#endif

//
// @#AZ Event Log message IDs - todo: add msg table resource
//
#include "logmsg.h"					// generated by mc/rc

#define EVID_SVCFAIL	EVLOG //2100		// StartServiceCtrlDispatcher failed
#define EVID_SSSFAIL    EVLOG //2100		// SetServiceStatus failed
#define EVID_GENERIC	EVLOG //2999		// Generic, used by AddToMessageLog()
#define EVID_SVCSTART	EVLOG //7700		// Service starting
#define EVID_SVCSTOP	EVLOG //7701		// Service stopping
#define EVID_SCMERR		EVLOG //7711		// Problems talking with SCM
#define EVID_WINERR		EVLOG //7712		// Could not create service window
#define EVID_KILLED		EVLOG //7713		// Window closed - stopping

#ifndef _SERVICE_H_INFO
//
// SZWINCLASSNAME				Window class for svcbody
// SZKILLEVENT					Event used for termination
//
#define SZWINCLASSNAME			"WPortRptWClass"
#define SZKILLEVENT				"WPortRptEKill"
//
// Func.prototypes 
BOOL InitApplication(HANDLE, DWORD, LPTSTR *);
BOOL InitInstance(HANDLE, int);
LONG APIENTRY MainWndProc(HWND, UINT, UINT, LONG);
long svc_main(HANDLE hKillEvent);
#endif

/*
  For Gnu Emacs.
  Local Variables:
  tab-width: 4
  c-basic-offset: 4
  End:
*/
